{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANAR\\\\Desktop\\\\Soltanov\\\\soltanov\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = \"cf2ff9413ab14d37b65c832d3c428f67\";\n\nclass AppSoltanov extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n      console.log(data);\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        error: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default AppSoltanov;","map":{"version":3,"sources":["C:/Users/ANAR/Desktop/Soltanov/soltanov/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","AppSoltanov","Component","state","temp","undefined","city","country","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","console","log","setState","main","name","sys","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAGA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,OAAO,EAAEH,SAJH;AAKNI,MAAAA,MAAM,EAAEJ,SALF;AAMNK,MAAAA,KAAK,EAAEL;AAND,KAFgC;;AAAA,SAWxCM,cAXwC,GAWvB,MAAOC,CAAP,IAAa;AAC5BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMC,OAAO,GAAG,MAChBC,KAAK,CAAE,qDAAoDZ,IAAK,UAASN,OAAQ,eAA5E,CADL;AAEA,YAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAKI,QAAL,CAAc;AACZnB,QAAAA,IAAI,EAAEe,IAAI,CAACK,IAAL,CAAUpB,IADJ;AAEZE,QAAAA,IAAI,EAAEa,IAAI,CAACM,IAFC;AAGZlB,QAAAA,OAAO,EAAEY,IAAI,CAACO,GAAL,CAASnB,OAHN;AAIZC,QAAAA,OAAO,EAAEW,IAAI,CAACO,GAAL,CAASlB,OAJN;AAKZC,QAAAA,MAAM,EAAEU,IAAI,CAACO,GAAL,CAASjB,MALL;AAMZC,QAAAA,KAAK,EAAE;AANK,OAAd;AAQD,KA3BuC;AAAA;;AA8BxCiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAI,KAAKhB,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAtCuC;;AAyC1C,eAAeV,WAAf","sourcesContent":["import React from \"react\";\r\nimport Info from \"./components/info\";\r\nimport Form from \"./components/form\";\r\nimport Weather from \"./components/weather\";\r\n\r\nconst API_KEY = \"cf2ff9413ab14d37b65c832d3c428f67\";\r\n\r\n\r\nclass AppSoltanov extends React.Component {\r\n\r\n  state = {\r\n    temp: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    sunrise: undefined,\r\n    sunset: undefined,\r\n    error: undefined,\r\n  }\r\n\r\n  gettingWeather = async (e) => {\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    const api_url = await\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\r\n    const data = await api_url.json();\r\n    console.log(data);\r\n\r\n    this.setState({\r\n      temp: data.main.temp,\r\n      city: data.name,\r\n      country: data.sys.country,\r\n      sunrise: data.sys.sunrise,\r\n      sunset: data.sys.sunset,\r\n      error: \"\",\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Info />\r\n        <Form weatherMethod = {this.gettingWeather} />\r\n        <Weather />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppSoltanov;\r\n"]},"metadata":{},"sourceType":"module"}